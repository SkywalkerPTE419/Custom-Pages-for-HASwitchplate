##############################################################################
# A dummy sensor is created below for demonstration purposes.  Volume change
# will not work.
# To use with a real media player, comment out the dummy sensors, uncomment
# the examples, and modify to fit the attributes published by your own media
# player device.
sensor:
  - platform: template
    sensors:
       media_player_title:
         value_template: '{{ states.media_player.spotify.attributes.media_title }}'
       media_player_artist:
         value_template: '{{ states.media_player.spotify.attributes.media_artist }}'
       media_player_volume:
         value_template: '{{ states.media_player.spotify.attributes.volume_level }}'
      #media_player_title:
        #value_template: 'Track Title'
      #media_player_artist:
        #value_template: 'Artist Name'
      #media_player_volume:
        #value_template: '0.50'


automation:

##############################################################################
# Automations to display media player info on page 8


# Initialize button text/font for media controls on start
  - alias: hasp_plate01_p8_MediaInit
    trigger:
    - platform: state
      entity_id: 'binary_sensor.plate01_connected'
      to: 'on'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[11].font'
        payload: '7'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[11].txt'
        payload: '"SOURCE1"' # Set name for SOURCE1
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[10].font'
        payload: '7'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[10].txt'
        payload: '"SOURCE2"' # Set name for SOURCE2

  
  # Select SOURCE1
  - alias: hasp_plate_p8_SourceKücheB10
    trigger:
      platform: mqtt
      topic: 'hasp/plate01/state/p[8].b[11]'
      payload: 'ON'
    action:
      service: media_player.select_source
      data:
        entity_id: media_player.spotify
        source: 'MEDIA_SOURCE1' # replace with your own Media Player Source

  # Select SOURCE2
  - alias: hasp_plate_p8_SourceKücheB11
    trigger:
      platform: mqtt
      topic: 'hasp/plate01/state/p[8].b[10]'
      payload: 'ON'
    action:
      service: media_player.select_source
      data:
        entity_id: media_player.spotify
        source: 'MEDIA_SOURCE2' # replace with your own Media Player Source

  # Play/Pause button action
  - alias: hasp_plate01_p8_MediaPauseButton7
    trigger:
      platform: mqtt
      topic: 'hasp/plate01/state/p[8].b[7]'
      payload: 'ON'
    action:
      service: media_player.media_play_pause
      entity_id: media_player.spotify
  
  # Prev Track button action
  - alias: hasp_plate01_p8_MediaPrevTrackButton6
    trigger:
      platform: mqtt
      topic: 'hasp/plate01/state/p[8].b[6]'
      payload: 'ON'
    action:
      service: media_player.media_previous_track
      entity_id: media_player.spotify
      
  # Next Track button action
  - alias: hasp_plate01_p8_MediaNextTrackButton8
    trigger:
      platform: mqtt
      topic: 'hasp/plate01/state/p[8].b[8]'
      payload: 'ON'
    action:
      service: media_player.media_next_track
      entity_id: media_player.spotify
      
  # Scale media information fonts to fit
  # 0 consolas 24 - 20 chars x 2 lines (wrapped)
  # 1 consolas 32 - 15 chars x 2 lines (wrapped)
  # 2 consolas 48 - 10 chars x 1 line
  # 3 consolas 80 - 6 chars x 1 line
  - alias: hasp_plate01_p5_MediaArtist
    trigger:
    - platform: state
      entity_id: sensor.media_player_artist
    - platform: state
      entity_id: 'binary_sensor.plate01_connected'
      to: 'on'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[4].font'
        payload_template: '{% if states.sensor.media_player_artist.state|length <= 6 -%}3{% elif (states.sensor.media_player_artist.state|length > 6) and (states.sensor.media_player_artist.state|length <= 10) %}2{% elif (states.sensor.media_player_artist.state|length > 10) and (states.sensor.media_player_artist.state|length <= 15) %}1{% else %}0{%- endif %}'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[4].txt'
        payload_template: '"{{ states.sensor.media_player_artist.state|wordwrap(20, wrapstring="\\r") }}"'
  
  - alias: hasp_plate01_p5_MediaTitle
    trigger:
    - platform: state
      entity_id: sensor.media_player_title
    - platform: state
      entity_id: 'binary_sensor.plate01_connected'
      to: 'on'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[12].font'
        payload_template: '{% if states.sensor.media_player_title.state|length <= 6 -%}3{% elif (states.sensor.media_player_title.state|length > 6) and (states.sensor.media_player_title.state|length <= 10) %}2{% elif (states.sensor.media_player_title.state|length > 10) and (states.sensor.media_player_title.state|length <= 15) %}1{% else %}0{%- endif %}'
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[12].txt'
        payload_template: '"{{ states.sensor.media_player_title.state|wordwrap(20, wrapstring="\\r") }}"'
  
  # Switching Media/Play buttons
  - alias: hasp_plate01_p5_MediaPlayPause
    trigger:
    - platform: state
      entity_id: media_player.spotify
    - platform: state
      entity_id: 'binary_sensor.plate01_connected'
      to: 'on'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[7].picc'
        payload_template: >-
          {% if states.media_player.spotify.state == "playing" -%}
            {{ 3 }}
          {%- elif states.media_player.spotify.state == "paused" -%}
            {{ 4 }}
          {% endif -%}  
          
  # Volume slider value published, apply published state
  - alias: hasp_plate01_p8_MediaVolSliderUpdateHass
    trigger:
      platform: mqtt
      topic: 'hasp/plate01/state/p[8].b[9].val'
    action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.spotify
        volume_level: '{{ (trigger.payload|int) / 100 }}'
        
  # Volume slider value changed by hass, update HASP 
  - alias: hasp_plate01_p5_MediaVolSliderUpdateHASP 
    trigger:
    - platform: state
      entity_id: sensor.media_player_volume
    - platform: state
      entity_id: 'binary_sensor.plate01_connected'
      to: 'on'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/plate01/command/p[8].b[9].val'
        payload_template: '{{ (states.sensor.media_player_volume.state | float * 100) | int }}'
